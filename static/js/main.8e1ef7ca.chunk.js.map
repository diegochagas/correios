{"version":3,"sources":["apis/GeocodingAPI.js","components/MapContainer.js","actions/types.js","actions/index.js","apis/BrazilianStatesAPI.js","components/SearchZipCode.js","apis/ViaCEPAPI.js","apis/BingMapsAPI.js","sagas/index.js","reducers/addressReducer.js","reducers/coordinatesReducer.js","reducers/index.js","store/index.js","App.js","index.js"],"names":["API_KEY","Geocode","setApiKey","MapContainer","_this$props$coordinat","this","props","coordinates","latitude","longitude","react_default","a","createElement","className","dist","google","zoom","center","lat","lng","onClick","onMarkerClick","name","onClose","onInfoWindowClose","React","Component","GoogleWrapper","GoogleApiWrapper","apiKey","connect","state","types","ADDRESS_LOAD","ADDRESS_LOAD_SUCCESS","ADDRESS_LOAD_FAIL","FETCH_COORDINATES","FETCH_COORDINATES_SUCCESS","FETCH_COORDINATES_FAIL","setAddress","address","type","setError","error","setCoordinates","setErrorCoordinates","brazilianStates","initials","SearchZipCode","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","CEP","createRef","onChangeCEP","bind","assertThisInitialized","onSearchCEP","_this$props","isLoading","logradouro","complemento","bairro","localidade","uf","cep","data-test","onSubmit","onChange","ref","placeholder","index_es","icon","faSearch","erro","errorMessageHandler","value","disabled","renderBrazilianStates","src_components_MapContainer","brazilianState","find","selectedUF","selectUFFromStatesList","id","map","key","event","current","target","preventDefault","loadAddress","loadMap","errorMessages","notFoundMessage","networkErrorMessage","invalidZipCodeMessage","fetchCoordinates","_ref","dispatch","ViaCEPAPI","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","get","concat","abrupt","sent","stop","_x","apply","arguments","BingMapsAPI","handleAddressLoad","watchAddressLoad","handleCoordinatesLoad","watchCoordinatesLoad","rootSaga","action","response","put","data","t0","toString","_marked","_context2","takeLatest","actionTypes","_marked2","_response","arrayCoordinates","_context3","resourceSets","resources","geocodePoints","_marked3","_context4","_marked4","_context5","all","_marked5","INITIAL_ADDRESS_STATE","INITIAL_COORDINATES_STATE","rootReducer","combineReducers","length","undefined","isLoadingCoordinates","errorCoordinates","configureStore","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","App","es","src_components_SearchZipCode","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8e1ef7ca.chunk.js","sourcesContent":["import Geocode from 'react-geocode';\r\nexport const API_KEY = \"AIzaSyBbEgH3Bm7kYUluzA4Zbc2VvGEfuJqwuQw\";\r\n\r\nGeocode.setApiKey(API_KEY);\r\n\r\nexport const GeocodingAPI = async CEP => await Geocode.fromAddress(CEP);\r\n\r\n","import React from 'react';\r\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\r\nimport { API_KEY } from '../apis/GeocodingAPI';\r\nimport { connect } from 'react-redux';\r\nimport './MapContainer.css';\r\n\r\nclass MapContainer extends React.Component {\r\n    render() {\r\n        const { latitude, longitude } = this.props.coordinates;\r\n        return (\r\n            <div className=\"map-container\">\r\n                <Map \r\n                    google={this.props.google} \r\n                    zoom={15} \r\n                    center={{ lat: latitude, lng: longitude }}\r\n                >\r\n                    <Marker onClick={this.onMarkerClick} name={'Current location'} />\r\n                    <InfoWindow onClose={this.onInfoWindowClose}>\r\n                        <div>\r\n                            <h1>Show Map</h1>\r\n                        </div>\r\n                    </InfoWindow>\r\n                </Map>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst GoogleWrapper = GoogleApiWrapper({\r\n    apiKey: API_KEY\r\n})(MapContainer);\r\n\r\nconst mapStateToProps = state => {\r\n    return { coordinates: state.coordinates };\r\n}\r\n\r\nexport default connect(mapStateToProps)(GoogleWrapper);\r\n\r\n\r\n\r\n","const types = {\r\n    ADDRESS_LOAD: 'ADDRESS_LOAD',\r\n    ADDRESS_LOAD_SUCCESS: 'ADDRESS_LOAD_SUCCESS',\r\n    ADDRESS_LOAD_FAIL: 'ADDRESS_LOAD_FAIL',\r\n    FETCH_COORDINATES: 'FETCH_COORDINATES',\r\n    FETCH_COORDINATES_SUCCESS: 'FETCH_COORDINATES_SUCCESS',\r\n    FETCH_COORDINATES_FAIL: 'FETC_COORDINATES_FAIL',\r\n};\r\n\r\nexport default types;","import types from './types';\r\n\r\nexport const loadAddress = CEP => ({ \r\n    type: types.ADDRESS_LOAD, \r\n    CEP \r\n});\r\n\r\nexport const setAddress = address => ({ \r\n    type: types.ADDRESS_LOAD_SUCCESS, \r\n    address \r\n});\r\n\r\nexport const setError = error => ({ \r\n    type: types.ADDRESS_LOAD_FAIL, \r\n    error \r\n});\r\n\r\nexport const fetchCoordinates = CEP => ({\r\n    type: types.FETCH_COORDINATES,\r\n    CEP\r\n});\r\n\r\nexport const setCoordinates = coordinates => ({ \r\n    type: types.FETCH_COORDINATES_SUCCESS, \r\n    coordinates\r\n});\r\n\r\nexport const setErrorCoordinates = error => ({ \r\n    type: types.FETCH_COORDINATES_FAIL, \r\n    error \r\n});\r\n","const brazilianStates = [\r\n    {initials: \"AC\", name: \"Acre\"},\r\n    {initials: \"AL\", name: \"Alagoas\"},\r\n    {initials: \"AP\", name: \"Amapá\"},\r\n    {initials: \"AM\", name: \"Amazonas\"},\r\n    {initials: \"BA\", name: \"Bahia\"},\r\n    {initials: \"CE\", name: \"Ceará\"},\r\n    {initials: \"DF\", name: \"Distrito Federal\"},\r\n    {initials: \"ES\", name: \"Espírito Santo\"},\r\n    {initials: \"GO\", name: \"Goiás\"},\r\n    {initials: \"MA\", name: \"Maranhão\"},\r\n    {initials: \"MT\", name: \"Mato Grosso\"},\r\n    {initials: \"MS\", name: \"Mato Grosso do Sul\"},\r\n    {initials: \"MG\", name: \"Minas Gerais\"},\r\n    {initials: \"PA\", name: \"Pará\"},\r\n    {initials: \"PB\", name: \"Paraíba\"},\r\n    {initials: \"PR\", name: \"Paraná\"},\r\n    {initials: \"PE\", name: \"Pernambuco\"},\r\n    {initials: \"PI\", name: \"Piauí\"},\r\n    {initials: \"RJ\", name: \"Rio de Janeiro\"},\r\n    {initials: \"RN\", name: \"Rio Grande do Norte\"},\r\n    {initials: \"RS\", name: \"Rio Grande do Sul\"},\r\n    {initials: \"RO\", name: \"Rondônia\"},\r\n    {initials: \"RR\", name: \"Roraima\"},\r\n    {initials: \"SC\", name: \"Santa Catarina\"},\r\n    {initials: \"SP\", name: \"São Paulo\"},\r\n    {initials: \"SE\", name: \"Sergipe\"},\r\n    {initials: \"TO\", name: \"Tocantins\"}\r\n];\r\n\r\nexport default brazilianStates;","import React from 'react';\r\nimport './SearchZipCode.css';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport MapContainer from './MapContainer';\r\nimport { loadAddress, fetchCoordinates } from '../actions';\r\nimport brazilianStates from '../apis/BrazilianStatesAPI';\r\n\r\nclass SearchZipCode extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.CEP = React.createRef();\r\n        this.onChangeCEP = this.onChangeCEP.bind(this);\r\n        this.onSearchCEP = this.onSearchCEP.bind(this);\r\n    }\r\n\r\n    render () {\r\n        const { isLoading, address, error } = this.props;\r\n        const { logradouro, complemento, bairro, localidade, uf, cep } = address;\r\n        return (\r\n            <div className=\"search-zip-code\" data-test=\"search-zip-code\">\r\n                <header className=\"search-header\">        \r\n                    <form className=\"\" onSubmit={this.onSearchCEP}>\r\n                        <label className=\"search-label\">Busca endereço</label>\r\n                        <input \r\n                            className=\"search-field\"\r\n                            type=\"text\"\r\n                            onChange={this.onChangeCEP}\r\n                            ref={this.CEP} \r\n                            placeholder=\"00000-000\"\r\n                            data-test=\"search-field\"\r\n                        />\r\n                        <button className=\"btn search-button\">\r\n                            <FontAwesomeIcon icon={faSearch} />\r\n                        </button>\r\n                    </form>\r\n                </header>\r\n                { ( error || address.erro ) && \r\n                <div className=\"error\">\r\n                    {this.errorMessageHandler(error, address.erro)}\r\n                </div>}\r\n                { isLoading &&\r\n                <div className=\"spinner\">\r\n                    <div>Procurando...</div>\r\n                    <progress></progress>\r\n                </div> }\r\n                { !(!address.cep || error !== null || address.erro) && \r\n                <div className=\"address-form\">\r\n                    <div className=\"address-fields\">\r\n                        <div className=\"form-group\">\r\n                            <label>CEP</label>\r\n                            <input value={cep} disabled name=\"cep\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Logradouro</label>\r\n                            <input value={logradouro} disabled name=\"logradouro\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Número</label>\r\n                            <input name=\"numero\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Complemento</label>\r\n                            <input value={complemento} disabled name=\"complemento\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Bairro</label>\r\n                            <input value={bairro} disabled name=\"bairro\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Cidade</label>\r\n                            <input value={localidade} disabled name=\"localidade\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Estado</label>\r\n                            {this.renderBrazilianStates(uf)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"map\">\r\n                        <MapContainer />\r\n                    </div>\r\n                </div> }\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    selectUFFromStatesList (uf) {\r\n        const brazilianState = brazilianStates.find(state => state.initials === uf); \r\n        return brazilianState ? brazilianState.initials : '';\r\n    }\r\n    \r\n    renderBrazilianStates (uf) { \r\n        const selectedUF = this.selectUFFromStatesList(uf)\r\n        return (\r\n            <select id=\"uf\" disabled value={selectedUF} data-test='select-uf'>\r\n                {brazilianStates.map(state => {\r\n                    return (\r\n                        <option key={state.initials} value={state.initials}>\r\n                            {state.name}\r\n                        </option>\r\n                    )\r\n                })}\r\n            </select>\r\n        );\r\n    }\r\n    \r\n    onChangeCEP(event) {\r\n        this.CEP.current = event.target.value;\r\n    }\r\n    \r\n    onSearchCEP (event) {\r\n        event.preventDefault();\r\n        const CEP = this.CEP.current;\r\n        this.props.loadAddress(CEP);\r\n        this.loadMap(CEP);\r\n    }\r\n    \r\n    errorMessageHandler (error, erro) {\r\n        const notFound = erro;\r\n        if (notFound && error === null) {\r\n            return errorMessages.notFoundMessage;\r\n        }\r\n        else if (error === errorMessages.networkErrorMessage) {\r\n            return errorMessages.invalidZipCodeMessage;\r\n        }\r\n        else return error;\r\n    }\r\n    \r\n    loadMap (CEP) {\r\n        this.props.fetchCoordinates(CEP);\r\n    }\r\n}\r\n\r\nexport const errorMessages = {\r\n    notFoundMessage: 'O CEP consultado não foi encontrado na base de dados.',\r\n    networkErrorMessage: \"Error: Network Error\",\r\n    invalidZipCodeMessage: \"CEP de formato inválido, digite novamente.\"\r\n}\r\n\r\nconst mapStateToProps = ({ isLoading, address, loadAddress, error }) => ({\r\n    isLoading, address, loadAddress, error \r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    loadAddress: CEP => dispatch(loadAddress(CEP)),\r\n    fetchCoordinates: CEP => dispatch(fetchCoordinates(CEP))\r\n});\r\n \r\nexport default connect( mapStateToProps, mapDispatchToProps)(SearchZipCode);\r\n","import axios from 'axios';\r\n\r\nconst ViaCEPAPI = async CEP => await axios.get(`https://viacep.com.br/ws/${CEP}/json/`);\r\n\r\nexport default ViaCEPAPI;\r\n","import axios from 'axios';\r\nconst BING_API_KEY = \"AhaUarMLk9Ld4hM3CieQT8PH3aUlGJUtkT353eG_BLWj3zvqZKkkIAkoX2JwyMIJ\";\r\nconst BING_URL = \"http://dev.virtualearth.net/REST/v1/Locations\";\r\n\r\nconst BingMapsAPI = async CEP => await axios.get(`${BING_URL}?key=${BING_API_KEY}&query=${CEP}`);\r\n\r\nexport default BingMapsAPI;\r\n","import { put, call, takeLatest, all } from 'redux-saga/effects';\r\nimport { setAddress, setError, setCoordinates, setErrorCoordinates } from '../actions';\r\nimport actionTypes from '../actions/types';\r\nimport ViaCEPAPI from '../apis/ViaCEPAPI';\r\nimport BingMapsAPI from '../apis/BingMapsAPI';\r\n\r\nfunction* handleAddressLoad(action) {\r\n    try {\r\n        const response = yield call(ViaCEPAPI, action.CEP);\r\n        yield put(setAddress(response.data));\r\n    } catch (error) {\r\n        yield put(setError(error.toString()));\r\n    }\r\n}\r\n\r\nfunction* watchAddressLoad() {\r\n    yield takeLatest(actionTypes.ADDRESS_LOAD, handleAddressLoad);\r\n}\r\n\r\nfunction* handleCoordinatesLoad(action) {\r\n    try {\r\n        const response = yield call(BingMapsAPI, action.CEP);\r\n        const arrayCoordinates = response.data.resourceSets[0].resources[0].geocodePoints[0].coordinates;\r\n        yield put(setCoordinates({latitude: arrayCoordinates[0], longitude: arrayCoordinates[1]}));\r\n    } catch (error) {\r\n        yield put(setErrorCoordinates(error.toString()));\r\n    }\r\n}\r\n\r\nfunction* watchCoordinatesLoad() {\r\n    yield takeLatest(actionTypes.FETCH_COORDINATES, handleCoordinatesLoad);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([watchAddressLoad(), watchCoordinatesLoad()]);\r\n}\r\n","import actionTypes from '../actions/types';\r\n\r\nexport const INITIAL_ADDRESS_STATE = {\r\n    logradouro: \"\",\r\n    complemento: \"\",\r\n    bairro: \"\",\r\n    localidade: \"\",\r\n    uf: \"\",\r\n    cep: \"\"\r\n}\r\n\r\nexport const addressReducer = (state = INITIAL_ADDRESS_STATE, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADDRESS_LOAD_SUCCESS:\r\n            return action.address;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const loadingReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADDRESS_LOAD:\r\n            return true;\r\n        case actionTypes.ADDRESS_LOAD_SUCCESS:\r\n        case actionTypes.ADDRESS_LOAD_FAIL:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const errorReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADDRESS_LOAD_FAIL:\r\n            return action.error;\r\n        case actionTypes.ADDRESS_LOAD:\r\n        case actionTypes.ADDRESS_LOAD_SUCCESS:\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import actionTypes from '../actions/types';\r\n\r\nexport const INITIAL_COORDINATES_STATE = {\r\n        latitude: \"-24.0350399017334\", \r\n        longitude: \"-46.530548095703125\"\r\n};\r\n\r\nexport const coordinatesReducer = (state = INITIAL_COORDINATES_STATE, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_COORDINATES_SUCCESS:\r\n            return action.coordinates;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const loadingCoordinatesReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_COORDINATES:\r\n            return true;\r\n        case actionTypes.FETCH_COORDINATES_SUCCESS:\r\n        case actionTypes.FETCH_COORDINATES_FAIL:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const errorCoordinatesReducer = (state = null, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_COORDINATES_FAIL:\r\n            return action.error;\r\n        case actionTypes.FETCH_COORDINATES:\r\n        case actionTypes.FETCH_COORDINATES_SUCCESS:\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { loadingReducer, addressReducer, errorReducer } from './addressReducer';\r\nimport { loadingCoordinatesReducer, coordinatesReducer, errorCoordinatesReducer } from './coordinatesReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    isLoading: loadingReducer,\r\n    address: addressReducer,\r\n    error: errorReducer,\r\n    isLoadingCoordinates: loadingCoordinatesReducer,\r\n    coordinates: coordinatesReducer,\r\n    errorCoordinates: errorCoordinatesReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\nimport rootReducer from '../reducers';\r\n\r\nconst configureStore = () => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n    sagaMiddleware.run(rootSaga);\r\n    return store;\r\n};\r\n\r\nexport default configureStore;\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport SearchZipCode from './components/SearchZipCode';\r\nimport configureStore from './store';\r\nimport './App.css';\r\n\r\nconst store = configureStore();\r\n\r\nclass App extends Component {\r\n    render () {\r\n        return (\r\n            <Provider store={store}>\r\n                <div className=\"App\" data-test=\"app\">\r\n                    <SearchZipCode />\r\n                </div>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}